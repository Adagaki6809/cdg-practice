Класс Router формирует маршруты для CRUD операций над интернет-ресурсом. Чтобы взаимодействовать с ним, необходимо выполнить HTTP-запрос.
В HTTP этим CRUD операциям соответствуют методы HTTP:  GET, POST, PUT, DELETE.
Create - POST   - метод create
  Read - GET    - методы index и show
Update - PUT    - метод update
Delete - DELETE - метод destroy

В конструкторе класса определяется пустой хеш в виде переменной экземпляра @routes.
После создания экземпляра класса Router вызывается метод init.
В этом методе для ресурса posts формируются маршруты, при переходе по которым, вызываются методы экземпляра класса PostsController.

При POST запросе к условному адресу https://127.0.0.1/posts будет вызван метод create экземпляра класса PostsController.
При GET запросе к условному адресу https://127.0.0.1/posts будет вызван метод index экземпляра класса PostsController.
При GET запросе к условному адресу https://127.0.0.1/posts/12 будет вызван метод show экземпляра класса PostsController.
При PUT запросе к условному адресу https://127.0.0.1/posts/12 будет вызван метод update экземпляра класса PostsController.
При DELETE запросе к условному адресу https://127.0.0.1/posts/12 будет вызван метод destroy экземпляра класса PostsController.

Далее в бесконечном цикле происходит запрос у пользователя названия ресурса, скоторым он хочет взаимодействовать.
В случае ресурса posts создается условное подключение к нему с помощью метода класса(статического метода) PostsController.
Так как модуль Resource подключен к классу PostsController как extend Resource, то метод модуля connection становится методом класса PostsController,
а не методом его екземпляра. Поэтому вызов connection происходит у класса: PostsController.connection.

Почему именно extend? Может потому что нет смысла создавать много экземпляров класса PostsController. Он будет только 1.
